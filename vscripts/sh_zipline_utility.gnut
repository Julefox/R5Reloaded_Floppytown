untyped

global function ShZiplineUtility_Init


// Global const strings
    const float         ZIPLINE_ON_USE_DURATION     = 0.3
    global const string ZIPLINE_CREATE              = "Hold %use_long% to deploy zipline"
    global const string ZIPLINE_DESTROY             = "Hold %use_long% to destroy zipline"
    global const string ZIPLINE_PANEL_SCRIPT_NAME   = "ZiplineUsableButton"
    global const string ZIPLINE_PANEL_SUPPORT_SCRIPT_NAME = "ZiplineSupportButton"

    #if CLIENT || UI
        const string    ZIPLINE_PROCESSING          = "Panel Processing..."
        const string    ZIPLINE_LOOPSOUND           = "survival_titan_linking_loop"
        const string    ZIPLINE_SUCCESSSOUND        = "lootVault_Access" //"ui_menu_store_purchase_success"
        const asset     ZIPLINE_DISPLAYRUI          = $"ui/extended_use_hint.rpak"
        const asset     ZIPLINE_ICONRUI             = $""
    #endif // CLIENT || UI


void function ShZiplineUtility_Init()
{
    #if SERVER
	    AddSpawnCallback( "prop_dynamic", UsablePanel )
    #endif // SERVER

    #if CLIENT
        AddCreateCallback( "prop_dynamic", UsablePanel )
    #endif // CLIENT
}


void function UsablePanel( entity UsableButton )
{
    if ( !IsValidZiplineUtilityPanelEnt( UsableButton ) )
		return
    
    SetCallback_CanUseEntityCallback( UsableButton, ZiplinePanel_CanUse )
    AddCallback_OnUseEntity( UsableButton, OnUseZiplinePanel )
}

bool function IsValidZiplineUtilityPanelEnt( entity ent )
{
	if ( ent.GetScriptName() == ZIPLINE_PANEL_SCRIPT_NAME )
		return true

	return false
}

bool function ZiplinePanel_CanUse( entity player, entity panel )
{
	if ( !SURVIVAL_PlayerCanUse_AnimatedInteraction( player, panel ) )
		return false

	return true
}

void function OnUseZiplinePanel( entity panel, entity playerUser, int useInputFlags )
{	
	if ( !( useInputFlags & USE_INPUT_LONG ) )
		return

	ExtendedUseSettings settings
	settings.duration = ZIPLINE_ON_USE_DURATION
    settings.useInputFlag = IN_USE_LONG
    settings.successFunc = ZiplinePanelUseSuccess

	#if CLIENT || UI
		settings.loopSound = ZIPLINE_LOOPSOUND
		settings.successSound = ZIPLINE_SUCCESSSOUND
		settings.icon = ZIPLINE_ICONRUI
		settings.hint = ZIPLINE_PROCESSING
		settings.displayRui = ZIPLINE_DISPLAYRUI
		settings.displayRuiFunc = ZiplinePanel_DisplayRui
    #endif // CLIENT || UI

	thread ExtendedUse( panel, playerUser, settings )
}

void function ZiplinePanelUseSuccess( entity panel, entity player, ExtendedUseSettings settings )
{
    #if SERVER
        OnUseZiplinePanelThread( panel )
    #endif // SERVER
}


#if CLIENT || UI
    void function ZiplinePanel_DisplayRui( entity ent, entity player, var rui, ExtendedUseSettings settings )
    {
    	RuiSetString( rui, "holdButtonHint", settings.holdHint )
    	RuiSetString( rui, "hintText", settings.hint )
    	RuiSetGameTime( rui, "startTime", Time() )
    	RuiSetGameTime( rui, "endTime", Time() + settings.duration )
    }
#endif // CLIENT || UI
