untyped


global function ZiplineUtility_Init


// Global const
    global const       ZIPLINE_EXPLOSION                        = $"p_impact_exp_small_full"

// Global const assets
    global const asset ZIPLINE_ARM                              = $"mdl/industrial/zipline_arm.rmdl"
    global const asset ZIPLINE_PLANEL_WALL                      = $"mdl/props/global_access_panel_button/global_access_panel_button_wall.rmdl"
    global const asset ZIPLINE_PLANEL_STAND                     = $"mdl/props/global_access_panel_button/global_access_panel_button_console_w_stand.rmdl"
    global const asset ZIPLINE_PLANEL_WALL_SUPPORT              = $"mdl/colony/antenna_01_colony_pole.rmdl"
    global const asset ZIPLINE_SUPPORT                          = $"mdl/industrial/security_fence_post.rmdl"

// Global const float
    global const float  ARM_MAX_OFFSET                          = 280.0
    global const float  ARM_MIN_OFFSET                          = 160.0
    global const float  END_AUTO_DETACH_DISTANCE                = 50.0
    global const float  HORIZONTAL_ARM_OFFSET                   = 160.0
    global const float  HORIZONTAL_END_AUTO_DETACH_DISTANCE     = 150.0
    global const float  HORIZONTAL_START_AUTO_DETACH_DISTANCE   = 150.0
    global const float  START_AUTO_DETACH_DISTANCE              = 100.0
    global const float  VERTICAL_ARM_OFFSET                     = 200.0
    global const float  ZIPLINE_LENGTH_OFFSET_SAME_Z_POS        = 0.99

// Global const string
    global const string HORIZONTAL_ZIPLINE_SCRIPT_NAME          = "IsNonVerticalZipline"
    global const string VERTICAL_ZIPLINE_SCRIPT_NAME            = "IsVerticalZipline"
    global const string ZIPLINE_END_SOUND                       = "explo_spectre"
    global const string ZIPLINE_PANEL_LOCKED                    = "npe_player_fail"
    global const string ZIPLINE_START_SOUND                     = "pathfinder_zipline_expand"

// Global const vector
    global const vector V_ZIPLINE_VECTOR                        = < 0.0001, 0.0001, 0.0001 >


global enum eZiplineSkinType
{
    ENTIRE,    // 0
    ARM_ONLY,  // 1
    INVISIBLE, // 2
    _COUNT     // 3
}

global struct ZiplineState
{
    bool firstInit  = true
    bool supportIsValid     = false
    bool ziplineIsValid     = false
    bool ziplineIsDestroyed = true
}

global struct KVFilesSettings
{
    // KV.Files vars start
    bool isVertical
    float fadeDistance              = -1.0
    float lengthScale               = 1.0
    float scale                     = 1.0
    float speedScale                = 1.0
    float startAutoDetachDistance
    float width                     = 2.0
    int detachEndOnSpawn            = 0
    int detachEndOnUse              = 0
    int dropToBottom                = 1
    int preserveVelocity            = 0
    int startPushOffInDirectionX    = 1
    int ziplineVersion              = 3
    string material                 = "cable/zipline.vmt"

    // KV.Files vars end
    float endAutoDetachDistance
    int endPushOffInDirectionX      = 1
}

global struct ZiplineVars
{
    bool boolHeightLimit    = false
    bool destroyAll         = false
    bool destroyZiplineSupportOnPanelEnd = false
    bool disableVerticalZiplineOffset = false
    bool isMoving           = false
    bool indianaJonesMode   = false
    bool restPoint          = false
    bool spawnSupportOnly   = false
    float endArmOffset
    float heightLimit     = 10000.0
    float startArmOffset
    int setSkinEnd        = eZiplineSkinType.ENTIRE
    int setSkinStart      = eZiplineSkinType.ENTIRE
    string ziplineName
    vector zipPosOffset   = < 0, 0, 80 >
}

global struct ZiplinePanel
{
    array < entity > newPanel
    bool panelNoTimer       = false
    bool panelUsableLimit   = false
    int panelMaxNumberUsed  = 0
    int panelNumberUsed     = 1
}

global enum ePanelSkinType
{
    WALL,  // 0
    STAND, // 1
    _COUNT // 2
}

global enum ePanelState
{
    ENABLE, // 0
    DISABLE // 1
}

global struct ZiplineUtility
{
    // Entities
    entity endZiplinePoint
    entity startZiplinePoint
    array < entity > supportArray

    // Vectors entities start / end
    vector endAng
    vector endPos
    vector endZipAng
    vector endZipPos
    vector startAng
    vector startPos
    vector startZipAng
    vector startZipPos

    KVFilesSettings settings
    ZiplineVars     vars
    ZiplinePanel    panels
    ZiplineState    state

    // Array
    array < ZiplineUtility > ziplineArrayInit
}
global ZiplineUtility ziplineUtility


void function ZiplineUtility_Init()
{
    ZiplinePrecache()
    AddCallback_EntitiesDidLoad( ZiplineUtility_Didload )
    AddClientCommandCallback( "IndianaJones", ClientCommand_SpawnZiplineAtCrosshair )
}

void function ZiplineUtility_Didload()
{
    OnMapZipline_Init()

    #if ZIPLINE_DEBUG_SCRIPTS && DEBUG_RANDOM_ZIPLINE
        AddCallback_OnClientConnected( CreateRandomZiplineOnClientConnected )
    #endif
}
