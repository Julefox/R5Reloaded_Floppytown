global function Floppytown_MapInit_Generation

void function Floppytown_MapInit_Generation()
{   printt( "Floppytown_MapInit_Generation OK" )
    Map_Generation()
    Dynamic_Build_Generation()
    Zips_Generation()

	if( GetCurrentPlaylistVarBool( "ft_walltrigger_disable", false ) )
    { printt( "wall trigger disable !" ) }
        else
    { CreateWallTriggerAroundTheMap() }

    if ( GetCurrentPlaylistVarBool( "ft_dev_enable", false ) )
    {   // map editing, do not activate in normal use
        EditorRefAreVisible()
        AreaBuildAreVisible()
        PrinttPropsCount()
        AddClientCommandCallback( "props",  ClientCommand_Props )
        AddClientCommandCallback( "god",    ClientCommand_Invulnerable )
        AddClientCommandCallback( "test",   ClientCommand_Test )
        AddClientCommandCallback( "asset",  ClientCommand_AssetViewer )

		for ( int i = 0 ; i < assetViewerArray.len() ; i++)
    	{
    	    PrecacheModel( assetViewerArray[i] )
    	}
    }

    thread SkyboxAnimation()
    //thread Sprint()
	
	Ang()

}

bool function ClientCommand_Props( entity player, array<string> args )
{   PrinttPropsCount(); return true }

bool function ClientCommand_Invulnerable( entity player, array<string> args )
{
	if ( player.GetPlayerName() == "Julefox" )
	{
		if ( player.IsInvulnerable() )
        {
            player.ClearInvulnerable()
            printt( player.GetPlayerName() + " is now vulnerable." )
        }
        else
        {
            player.SetInvulnerable()
            player.SetHealth( 100 )

            printt( player.GetPlayerName() + " is invulnerable !")
        }
	}
    else
    {
        printt( "cheh." )
        return false
    }

return true }

int function PropsCount()
{
    int count = 0
	foreach( EntitiesCount in GetPropsCount() )
	{ count++ }
	return count
}

array< entity > function GetPropsCount()
{
    array< entity > EntitiesCount = GetEntArrayByScriptName( "FloppytownEntities" )
    return EntitiesCount
}

void function PrinttPropsCount()
{ printt( "Models generated by Floppytown scripts: " + PropsCount() ) }

void function Map_Generation()
{
    Ft_Floor( FT_FLOOR_POS, FT_FLOOR_ANG, 6, 14, 1 )

    North_Wall( FT_NORTH_WALL_POS, FT_NORTH_WALL_ANG )
    South_Wall( FT_SOUTH_WALL_POS, FT_SOUTH_WALL_ANG )
    West_Wall( FT_WEST_WALL_POS, FT_WEST_WALL_ANG )
    East_Wall( FT_EAST_WALL_POS, FT_EAST_WALL_ANG )

    Building_01( FT_BUILDING_POS_01, FT_BUILDING_ANG_01 )
    Building_02( FT_BUILDING_POS_02, FT_BUILDING_ANG_02 )
    Building_03( FT_BUILDING_POS_03, FT_BUILDING_ANG_03 )
    Building_04( FT_BUILDING_POS_04, FT_BUILDING_ANG_04 )
    Building_05( FT_BUILDING_POS_05, FT_BUILDING_ANG_05 )
    Building_06( FT_BUILDING_POS_06, FT_BUILDING_ANG_06 )
    Building_07( FT_BUILDING_POS_07, FT_BUILDING_ANG_07 )
    Building_08( FT_BUILDING_POS_08, FT_BUILDING_ANG_08 )
    Building_09( FT_BUILDING_POS_09, FT_BUILDING_ANG_09 )
    Building_10( FT_BUILDING_POS_10, FT_BUILDING_ANG_10 )
    Building_11( FT_BUILDING_POS_11, FT_BUILDING_ANG_11 )
    Building_12( FT_BUILDING_POS_12, FT_BUILDING_ANG_12 )
    Building_13( FT_BUILDING_POS_13, FT_BUILDING_ANG_13 )
    Building_14( FT_BUILDING_POS_14, FT_BUILDING_ANG_14 )
    Building_15( FT_BUILDING_POS_15, FT_BUILDING_ANG_15 )
    Building_16( FT_BUILDING_POS_16, FT_BUILDING_ANG_16 )
    Building_17( FT_BUILDING_POS_17, FT_BUILDING_ANG_17 )
    Building_18( FT_BUILDING_POS_18, FT_BUILDING_ANG_18 )
    Building_19( FT_BUILDING_POS_19, FT_BUILDING_ANG_19 )
    Building_20( FT_BUILDING_POS_20, FT_BUILDING_ANG_20 )
    //Building_21( FT_BUILDING_POS_21, FT_BUILDING_ANG_21 )
}

void function Dynamic_Build_Generation()
{
	array<string> rng_0_choice = [ "hide", "visible" ]
	string rng_0 = rng_0_choice.getrandom()
	array<string> rng_1_choice = [ "none", "none", "left", "left", "right", "right", "both", "both", "both", "both" ]
	string rng_1 = rng_1_choice.getrandom()

	if ( GetCurrentPlaylistVarBool( "ft_rng_is_not_rng", false ) )
    {
        printt( "RNG Update: -> disable" )
		rng_0 = "visible"
		rng_1 = "both"
    }

	// rng_0
	switch ( rng_0 )
	{
		case "hide":
			break
		case "visible":
			LittleBridge( FT_LITTLE_BRIDGE_POS, FT_LITTLE_BRIDGE_ANG )
		break
	}

	// rng_1
	switch ( rng_1 )
	{
		case "none":
			break
		case "left":
			BalconyLeft( FT_BALCONY_LEFT_POS, FT_BALCONY_LEFT_ANG )
			break
		case "right":
			BalconyRight( FT_BALCONY_RIGHT_POS, FT_BALCONY_RIGHT_ANG )
			break
		case "both":
			BalconyLeft( FT_BALCONY_LEFT_POS, FT_BALCONY_LEFT_ANG )
    	    BalconyRight( FT_BALCONY_RIGHT_POS, FT_BALCONY_RIGHT_ANG )
		break
	}

	printt( "Dynamic_Build_Generation RNG: Little Bridge = " + rng_0 )
	printt( "Dynamic_Build_Generation RNG: Balcony       = " + rng_1 )
}

void function Zips_Generation()
{
    CreateFloppytownZiplineModel( FT_BUILDING_POS_01 + < 600, 0, 1792.1 >, < 0, -90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_01 + < -600, 256, 1792.1 >, < 0, 90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_02 + < 640, 256, 1280 >, < 0, -90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_02 + < 256, -512, 768 >, < 0, 180, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_04 + < 128, 256, 512 >, < 0, -90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_05 + < 0, 320, 1280 >, < 0, 0, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_06 + < 192, 384, 1792 >, < 0, 0, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_07 + < 1920, 64, 2048 >, < 0, -90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_07 + < 0, 640, 2304 >, < 0, 0, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_08 + < 256, 256, 1664 >, < 0, 0, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_09 + < -256, 384, 2048 >, < 0, 0, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_10 + < -384, 128, 1280 >, < 0, 0, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_12 + < -128, 1024, 2304 >, < 0, 0, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_12 + < -384, 256, 2304 >, < 0, 90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_12 + < -640, 0, 1280 >, < 0, 90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_12 + < -128, -128, 2304 >, < 0, 180, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_13 + < -384, 1408, 1792 >, < 0, 90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_14 + < -512, 0, 1024 >, < 0, 90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_14 + < 128, -512, 1024 >, < 0, 180, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_16 + < -384, -256, 1280 >, < 0, 90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_16 + < 384, -256, 1280 >, < 0, -90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_16 + < 0, 384, 1280 >, < 0, 0, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_18 + < -320, -256, 1280 >, < 0, 180, 0 > ) //
    CreateFloppytownZiplineModel( FT_BUILDING_POS_18 + < 320, 256, 1280 >, < 0, 0, 0 > ) //
    CreateFloppytownZiplineModel( FT_BUILDING_POS_19 + < -192, 256, 1280 >, < 0, 90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_19 + < 192, -256, 1280 >, < 0, -90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_19 + < -1728, -192, 1280 >, < 0, 90, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_19 + < -960, 0, 1280 >, < 0, 0, 0 > )
    CreateFloppytownZiplineModel( FT_BUILDING_POS_19 + < -1472, -384, 1280 >, < 0, 180, 0 > )

	CreateFloppytownModel( ZIP_ARM, FT_BUILDING_POS_01 + < 64, -550, 832 >,   < 0, 180, 0 > )
	CreateFloppytownModel( ZIP_ARM, FT_BUILDING_POS_01 + < -448, -934, 176 >,   < 0, 140, 0 > )
	CreateFloppytownModel( ZIP_ARM, FT_BUILDING_POS_01 + < 576, -934, 176 >,   < 0, -140, 0 > )
    CreateFloppytownModel( ZIP_ARM, FT_BUILDING_POS_02 + < 896, 0, 148 >,   < 0, -90, 0 > )
    CreateFloppytownModel( ZIP_ARM, FT_BUILDING_POS_07 + < 1152, 384, 2176 >,   < 0, -90, 0 > )
    for ( int i = 0 ; i < 2 ; i++)
    {
        CreateFloppytownModel( ZIP_ARM, FT_BUILDING_POS_20 + < 416, -460, 168 > + < 0, 896 * i, 0 >,   < 0, -90, 0 > )
        CreateFloppytownModel( ZIP_ARM, FT_BUILDING_POS_20 + < -416, 460, 168 > + < 0, -896 * i, 0 >,   < 0, 90, 0 > )
    }
}

void function Ang()
{
	array<entity> props = 		GetEntArrayByScriptName( "FloppytownEntities" )
	array<entity> triggers = 	GetEntArrayByScriptName( "trigger_cylinder" )
	array<entity> editors = 	GetEntArrayByScriptName( "editor_ref" )

	entity script_mover = CreateFloppytownModel( EMPTY, FLOPPYTOWN_POS_OFFSET, FLOPPYTOWN_ANG_OFFSET )

	foreach ( prop in props )
	{ prop.SetParent( script_mover ) }
	foreach ( trigger in triggers )
	{ trigger.SetParent( script_mover ) }
	foreach ( editor in editors )
	{ editor.SetParent( script_mover ) }
    foreach ( prop in props )
	{ prop.SetParent( script_mover ) }

	script_mover.SetOrigin( FLOPPYTOWN_POS_OFFSET )
	script_mover.SetAngles( FLOPPYTOWN_ANG_OFFSET + < 0, 0, 0 > )
}

void function SkyboxAnimation()
{
    vector pos = < -22156.67, 844.36, -26894.61 >
    vector ang = < 0, 0, 0 >
    while ( true )
    {
        entity Fx = PlayFX( SPACE_DEBRIS_COMET, pos, ang )
        printt("PlayFX( NOW )")

        wait 6
        Fx.Destroy()
        WaitFrame()
    }
}

/* void function Sprint()
{
    bool IsSprinting = false
    array<entity> players = GetPlayerArray()

    foreach ( player in players)
    {
        if ( player.IsSprinting() )
        {
            IsSprinting = true
        }

        while ( IsSprinting )
        {
            printt(".")
            WaitFrame()
        }
    }
} */


bool function ClientCommand_Test( entity player, array<string> args )
{
return true }

bool function ClientCommand_AssetViewer( entity player, array<string> args )
{
    int j = 1
    int k = 1

    for ( int i = 0 ; i < assetViewerArray.len() ; i++ )
    {

        CreateFloppytownModel( assetViewerArray[i], FT_BUILD_AREA_POS + < 0, 0, 1000 > + < 0, 800 * j, 800 * k >, < 0, 0, 0 > )

        k++

        if ( k == 9 )
        {
            j = j+1
            k = k-8
        }
    }

return true }
