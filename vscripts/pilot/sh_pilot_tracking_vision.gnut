global function TrackingVision_GetPriorityForPOIType
global function TrackingVision_GetOffsetForPOI

const vector TRACKING_ICON_OFFSET = <0,0,16>
const vector TRACKING_ICON_OFFSET_SHORT = <0,0,8>
const vector TRACKING_ICON_DEATH_OFFSET = <0,0,40> //
global const TRACKING_DAMAGE_SOURCE_INDEX = 2	// 0 and 1 are used by CODE
global const TRACKING_DIST_INDEX = 3			// 0 and 1 are used by CODE

//Enum defining the various types of points of intrest for tracking vision.
//Tracking events must be added to the activeTrackingEvents table in _pilot_tracking_vision.gnut before they will be networked to client.
global enum eTrackingVisionNetworkedPOITypes
{
	DROPPOD,
	TITANFALL,
	TITAN_EMBARK,
	TITAN_DISEMBARK,
	DOOR_USE,
	DOOR_DESTROYED,
	PLAYER_CLASS_DEPLOYABLE,
	PLAYER_DEATH,
	PLAYER_KILLER,
	PLAYER_HEAL,
	PLAYER_RELOAD,
	PLAYER_STARTBLEEDOUT,
	PLAYER_TOOK_DAMAGE,
	PLAYER_FIRE_WEAPON_BULLET,
	PLAYER_FIRE_WEAPON_GRENADE,
	PLAYER_OPENDROPPOD,
	PLAYER_LOOTBIN_USED,
	PLAYER_TRAVERSAL_ZIPLINE_START,
	PLAYER_TRAVERSAL_ZIPLINE_STOP,
	PLAYER_TRAVERSAL_FOOTPRINT,
	PLAYER_TRAVERSAL_SLIDE,
	PLAYER_TRAVERSAL_MANTLE,
	PLAYER_TRAVERSAL_JUMP_DOWN_START,
	PLAYER_TRAVERSAL_JUMP_DOWN_STOP,
	PLAYER_TRAVERSAL_LAUNCH_PAD,
	PLAYER_ABILITIES_PHASE_DASH_START,
	PLAYER_ABILITIES_PHASE_DASH_STOP,
	PLAYER_ABILITIES_SMOKE,
	PLAYER_ABILITIES_GAS,
	PLAYER_LOOT_PICKUP,
	PLAYER_LOOT_PICKUP_AMMO,
	PLAYER_LOOT_PICKUP_ARMOR,
	PLAYER_LOOT_PICKUP_ATTACHMENT,
	PLAYER_LOOT_PICKUP_WEAPON,
	PLAYER_LOOT_PICKUP_GRENADE,
	PLAYER_LOOT_PICKUP_JUMPKIT,
	PLAYER_LOOT_PICKUP_HEALTH,
	PLAYER_LOOT_PICKUP_HELMET,
	PLAYER_LOOT_PICKUP_BACKPACK,
	PLAYER_LOOT_PICKUP_INCAPSHIELD,
	//PLAYER_LOOT_PICKUP_TITAN_REPAIR,
	//PLAYER_LOOT_PICKUP_TITAN_AMMO,
	PLAYER_LOOT_PICKUP_DATAKNIFE,
	PLAYER_LOOT_EXCHANGE_ARMOR,
	PLAYER_LOOT_EXCHANGE_WEAPON,
	PLAYER_LOOT_EXCHANGE_JUMPKIT,
	PLAYER_LOOT_EXCHANGE_HELMET,
	PLAYER_LOOT_EXCHANGE_BACKPACK,
	PLAYER_LOOT_EXCHANGE_INCAPSHIELD,
	PLAYER_LOOT_DROP,
	PLAYER_LOOT_DROP_AMMO,
	PLAYER_LOOT_DROP_ARMOR,
	PLAYER_LOOT_DROP_ATTACHMENT,
	PLAYER_LOOT_DROP_WEAPON,
	PLAYER_LOOT_DROP_GRENADE,
	PLAYER_LOOT_DROP_JUMPKIT,
	PLAYER_LOOT_DROP_HEALTH,
	PLAYER_LOOT_DROP_HELMET,
	PLAYER_LOOT_DROP_BACKPACK,
	PLAYER_LOOT_DROP_INCAPSHIELD,
	//PLAYER_LOOT_DROP_TITAN_REPAIR,
	//PLAYER_LOOT_DROP_TITAN_AMMO,
	PLAYER_LOOT_DROP_DATAKNIFE,

	PLAYER_ABILITY_DIRTY_BOMB,
	PLAYER_ABILITY_DEPLOYABLE_MEDIC,
	PLAYER_ABILITY_JUMP_PAD,
	PLAYER_ABILITY_BUBBLE_BUNKER,
	PLAYER_ABILITY_TESLA_TRAP,
	PLAYER_ABILITY_TROPHY_SYSTEM,
	PLAYER_ABILITY_PHASE_GATE,
}

//CODE enum eTrackingPOIPriority
//{
//	VERY_LOW,
//	LOW,
//	NORMAL,
//	HIGH,
//	VERY_HIGH,
//	MAX,
//}

int function TrackingVision_GetPriorityForPOIType( int poiEventID )
{
	switch ( poiEventID )
	{
		case eTrackingVisionNetworkedPOITypes.DROPPOD:
		case eTrackingVisionNetworkedPOITypes.TITANFALL:
		case eTrackingVisionNetworkedPOITypes.TITAN_EMBARK:
		case eTrackingVisionNetworkedPOITypes.TITAN_DISEMBARK:
		case eTrackingVisionNetworkedPOITypes.PLAYER_OPENDROPPOD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITIES_SMOKE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITIES_GAS:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_DIRTY_BOMB:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_DEPLOYABLE_MEDIC:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_JUMP_PAD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_BUBBLE_BUNKER:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_TESLA_TRAP:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_TROPHY_SYSTEM:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_PHASE_GATE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_DEATH:
		case eTrackingVisionNetworkedPOITypes.PLAYER_KILLER:
			return eTrackingPOIPriority.MAX

		case eTrackingVisionNetworkedPOITypes.DOOR_USE:
		case eTrackingVisionNetworkedPOITypes.DOOR_DESTROYED:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_ZIPLINE_START:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_ZIPLINE_STOP:
		case eTrackingVisionNetworkedPOITypes.PLAYER_HEAL:
		case eTrackingVisionNetworkedPOITypes.PLAYER_STARTBLEEDOUT:
			return eTrackingPOIPriority.VERY_HIGH

		case eTrackingVisionNetworkedPOITypes.PLAYER_RELOAD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TOOK_DAMAGE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_FIRE_WEAPON_BULLET:
		case eTrackingVisionNetworkedPOITypes.PLAYER_FIRE_WEAPON_GRENADE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOTBIN_USED:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP:
			return eTrackingPOIPriority.HIGH

		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_ARMOR:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_WEAPON:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_JUMPKIT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_BACKPACK:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_INCAPSHIELD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_EXCHANGE_ARMOR:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_EXCHANGE_WEAPON:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_EXCHANGE_JUMPKIT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_EXCHANGE_HELMET:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_EXCHANGE_BACKPACK:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_EXCHANGE_INCAPSHIELD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_ARMOR:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_WEAPON:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_JUMPKIT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_HELMET:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_BACKPACK:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_INCAPSHIELD:
			return eTrackingPOIPriority.NORMAL

		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_MANTLE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_JUMP_DOWN_STOP:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_LAUNCH_PAD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITIES_PHASE_DASH_START:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITIES_PHASE_DASH_STOP:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_AMMO:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_ATTACHMENT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_GRENADE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_HEALTH:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_HELMET:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_DATAKNIFE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_AMMO:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_ATTACHMENT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_GRENADE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_HEALTH:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_DATAKNIFE:
			return eTrackingPOIPriority.LOW

		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_FOOTPRINT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_SLIDE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_JUMP_DOWN_START:
			return eTrackingPOIPriority.VERY_LOW

		default:
			Assert( 0, "Point of intrest event ID is not registered in eTrackingVisionNetworkedPOITypes" )
			break
	}
	unreachable
}

vector function TrackingVision_GetOffsetForPOI( int poiEventID )
{
	switch ( poiEventID )
	{
		case eTrackingVisionNetworkedPOITypes.DROPPOD:
		case eTrackingVisionNetworkedPOITypes.TITAN_EMBARK:
		case eTrackingVisionNetworkedPOITypes.TITAN_DISEMBARK:
		case eTrackingVisionNetworkedPOITypes.PLAYER_HEAL:
		case eTrackingVisionNetworkedPOITypes.PLAYER_RELOAD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_STARTBLEEDOUT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TOOK_DAMAGE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_FIRE_WEAPON_BULLET:
		case eTrackingVisionNetworkedPOITypes.PLAYER_FIRE_WEAPON_GRENADE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_OPENDROPPOD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOTBIN_USED:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_ZIPLINE_START:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_ZIPLINE_STOP:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_TESLA_TRAP:
		case eTrackingVisionNetworkedPOITypes.PLAYER_KILLER:
			return TRACKING_ICON_OFFSET

		case eTrackingVisionNetworkedPOITypes.PLAYER_DEATH:
			return TRACKING_ICON_DEATH_OFFSET
		case eTrackingVisionNetworkedPOITypes.TITANFALL:
		case eTrackingVisionNetworkedPOITypes.DOOR_USE:
		case eTrackingVisionNetworkedPOITypes.DOOR_DESTROYED:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_DEPLOYABLE_MEDIC:
			return <0,0,0>

		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_FOOTPRINT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_SLIDE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_MANTLE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_JUMP_DOWN_START:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_JUMP_DOWN_STOP:
		case eTrackingVisionNetworkedPOITypes.PLAYER_TRAVERSAL_LAUNCH_PAD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITIES_PHASE_DASH_START:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITIES_PHASE_DASH_STOP:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITIES_SMOKE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITIES_GAS:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_AMMO:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_ARMOR:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_ATTACHMENT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_WEAPON:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_GRENADE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_JUMPKIT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_HEALTH:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_HELMET:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_BACKPACK:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_INCAPSHIELD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_PICKUP_DATAKNIFE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_EXCHANGE_ARMOR:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_EXCHANGE_WEAPON:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_EXCHANGE_JUMPKIT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_EXCHANGE_HELMET:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_EXCHANGE_BACKPACK:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_EXCHANGE_INCAPSHIELD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_AMMO:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_ARMOR:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_ATTACHMENT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_WEAPON:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_GRENADE:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_JUMPKIT:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_HEALTH:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_HELMET:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_BACKPACK:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_INCAPSHIELD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_LOOT_DROP_DATAKNIFE:
			return TRACKING_ICON_OFFSET_SHORT

		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_DIRTY_BOMB:
			return < 0, 0, 54.0 >

		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_BUBBLE_BUNKER:
			return < 0, 0, 24.0 >

		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_JUMP_PAD:
		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_PHASE_GATE:
			return < 0, 0, 32.0 >

		case eTrackingVisionNetworkedPOITypes.PLAYER_ABILITY_TROPHY_SYSTEM:
			return < 0, 0, 8.0 >

		default:
			Assert( 0, "Point of intrest event ID is not registered in eTrackingVisionNetworkedPOITypes" )
			break
	}
	unreachable
}